<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19" xml:lang="en-US">
  <compounddef id="class_s_c_p_i___parser" kind="class" language="C++" prot="public">
    <compoundname>SCPI_Parser</compoundname>
    <includes refid="_vrekrer__scpi__parser_8h" local="no">Vrekrer_scpi_parser.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_c_p_i___parser_1a26fa50abbfcad4a5df6bf46833ea62a1" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t SCPI_Parser::tokens_size_</definition>
        <argsstring></argsstring>
        <name>tokens_size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What does the tokens size represent? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="85" column="11" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_c_p_i___parser_1a5a055bdf0075d8848b6133194924faa0" prot="protected" static="no" mutable="no">
        <type>char *</type>
        <definition>char* SCPI_Parser::tokens_[15]</definition>
        <argsstring>[15]</argsstring>
        <name>tokens_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What are the &apos;tokens&apos; in this class? This is unclear </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="87" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_c_p_i___parser_1ac836f5571f1c3c6c7887b80bd050de77" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t SCPI_Parser::codes_size_</definition>
        <argsstring></argsstring>
        <name>codes_size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What does the codes size represent? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="89" column="11" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_c_p_i___parser_1a1b784f3d0ae5aa1078d8be8895f135be" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t SCPI_Parser::valid_codes_[20]</definition>
        <argsstring>[20]</argsstring>
        <name>valid_codes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What are the valid codes? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="91" column="12" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_c_p_i___parser_1a98edc4489648395279570f99263677ac" prot="protected" static="no" mutable="no">
        <type>SCPI_caller_t</type>
        <definition>SCPI_caller_t SCPI_Parser::callers_[20]</definition>
        <argsstring>[20]</argsstring>
        <name>callers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>I have no idea what this is </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="93" column="17" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_c_p_i___parser_1af7d35ab7afd81bce9cb6ee1b3a604d2f" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t SCPI_Parser::tree_code_</definition>
        <argsstring></argsstring>
        <name>tree_code_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What is a tree code? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="95" column="12" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_c_p_i___parser_1a6b0c23b92c9d64668e4fbb472512cc40" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char SCPI_Parser::msg_buffer[64]</definition>
        <argsstring>[64]</argsstring>
        <name>msg_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="96" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_c_p_i___parser_1acec496d6937a23f681dcea60f36f16c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCPI_Parser::SetCommandTreeBase</definition>
        <argsstring>(const char *tree_base)</argsstring>
        <name>SetCommandTreeBase</name>
        <param>
          <type>const char *</type>
          <declname>tree_base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the command tree to base with a constant character. Not sure what this does either </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="73" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="206" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_s_c_p_i___parser_1a58e60c01618cf653628495580b77b460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCPI_Parser::SetCommandTreeBase</definition>
        <argsstring>(const __FlashStringHelper *tree_base)</argsstring>
        <name>SetCommandTreeBase</name>
        <param>
          <type>const __FlashStringHelper *</type>
          <declname>tree_base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the command tree to base. What does that mean? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="74" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_s_c_p_i___parser_1a2274b8b17b46c9ba014fed61fd789b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCPI_Parser::RegisterCommand</definition>
        <argsstring>(const char *command, SCPI_caller_t caller)</argsstring>
        <name>RegisterCommand</name>
        <param>
          <type>const char *</type>
          <declname>command</declname>
        </param>
        <param>
          <type>SCPI_caller_t</type>
          <declname>caller</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="75" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="223" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_s_c_p_i___parser_1ab9eddf2fdf741664d47d9f00aa9d04b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCPI_Parser::RegisterCommand</definition>
        <argsstring>(const __FlashStringHelper *command, SCPI_caller_t caller)</argsstring>
        <name>RegisterCommand</name>
        <param>
          <type>const __FlashStringHelper *</type>
          <declname>command</declname>
        </param>
        <param>
          <type>SCPI_caller_t</type>
          <declname>caller</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="76" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_s_c_p_i___parser_1aebcc90dfd8044303edb5df2cb7ebbb6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCPI_Parser::Execute</definition>
        <argsstring>(char *message, Stream &amp;interface)</argsstring>
        <name>Execute</name>
        <param>
          <type>char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>Stream &amp;</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="77" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="233" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_s_c_p_i___parser_1aa3f15b694caa52f41e7afbfd08bae77c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCPI_Parser::ProcessInput</definition>
        <argsstring>(Stream &amp;interface, char *term_chars)</argsstring>
        <name>ProcessInput</name>
        <param>
          <type>Stream &amp;</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>term_chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="78" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="274" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_s_c_p_i___parser_1a414fa2016689e5e0c82a7129db46e2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * SCPI_Parser::GetMessage</definition>
        <argsstring>(Stream &amp;interface, char *term_chars)</argsstring>
        <name>GetMessage</name>
        <param>
          <type>Stream &amp;</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>term_chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="79" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="243" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_s_c_p_i___parser_1ad70e92ae99ede24212e3a8899a1d049c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCPI_Parser::PrintDebugInfo</definition>
        <argsstring>()</argsstring>
        <name>PrintDebugInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="80" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="281" bodyend="301"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_c_p_i___parser_1ab3110f0075f29af0fac8e9e99e58bf22" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCPI_Parser::AddToken</definition>
        <argsstring>(char *token)</argsstring>
        <name>AddToken</name>
        <param>
          <type>char *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a token. What exactly is a token? What is the purpose of a token? For now, there are these things called tokens. I don&apos;t know why they exist or what they do, but this function&apos;s job is to add one. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>string pointer for something called a token. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="82" column="8" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="133" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_s_c_p_i___parser_1a80eb1ab408f07a9bc28298d95f3c3710" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t SCPI_Parser::GetCommandCode</definition>
        <argsstring>(SCPI_Commands &amp;commands)</argsstring>
        <name>GetCommandCode</name>
        <param>
          <type><ref refid="class_s_c_p_i___commands" kindref="compound">SCPI_Commands</ref> &amp;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses the command code from a previously-parsed SCPI command. Uses these things called &quot;tokens&quot; which I cannot make heads or tails of. Not clear what they actually mean. What on earth is a token? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="83" column="12" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.cpp" bodystart="155" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Main class for parsing SCPI messages into commands and parameters. This looks like the big daddy class that does all the heavy lifting. It looks like the SCPI Parameters and Commands classes each do their own parsing, what is the unique purpose of the parser class? It seems more like a communication/ interface class than a &apos;Parser&apos;. Might want to just rename to &apos;SCPI&apos; </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>SCPI_String_Array</label>
        <link refid="class_s_c_p_i___string___array"/>
      </node>
      <node id="2">
        <label>SCPI_Commands</label>
        <link refid="class_s_c_p_i___commands"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SCPI_Parser</label>
        <link refid="class_s_c_p_i___parser"/>
        <childnode refid="2" relation="usage">
          <edgelabel>callers_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="AD7766_Arduino/Vrekrer_scpi_parser.h" line="71" column="1" bodyfile="AD7766_Arduino/Vrekrer_scpi_parser.h" bodystart="71" bodyend="97"/>
    <listofallmembers>
      <member refid="class_s_c_p_i___parser_1ab3110f0075f29af0fac8e9e99e58bf22" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>AddToken</name></member>
      <member refid="class_s_c_p_i___parser_1a98edc4489648395279570f99263677ac" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>callers_</name></member>
      <member refid="class_s_c_p_i___parser_1ac836f5571f1c3c6c7887b80bd050de77" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>codes_size_</name></member>
      <member refid="class_s_c_p_i___parser_1aebcc90dfd8044303edb5df2cb7ebbb6e" prot="public" virt="non-virtual"><scope>SCPI_Parser</scope><name>Execute</name></member>
      <member refid="class_s_c_p_i___parser_1a80eb1ab408f07a9bc28298d95f3c3710" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>GetCommandCode</name></member>
      <member refid="class_s_c_p_i___parser_1a414fa2016689e5e0c82a7129db46e2ef" prot="public" virt="non-virtual"><scope>SCPI_Parser</scope><name>GetMessage</name></member>
      <member refid="class_s_c_p_i___parser_1a6b0c23b92c9d64668e4fbb472512cc40" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>msg_buffer</name></member>
      <member refid="class_s_c_p_i___parser_1ad70e92ae99ede24212e3a8899a1d049c" prot="public" virt="non-virtual"><scope>SCPI_Parser</scope><name>PrintDebugInfo</name></member>
      <member refid="class_s_c_p_i___parser_1aa3f15b694caa52f41e7afbfd08bae77c" prot="public" virt="non-virtual"><scope>SCPI_Parser</scope><name>ProcessInput</name></member>
      <member refid="class_s_c_p_i___parser_1a2274b8b17b46c9ba014fed61fd789b1c" prot="public" virt="non-virtual"><scope>SCPI_Parser</scope><name>RegisterCommand</name></member>
      <member refid="class_s_c_p_i___parser_1ab9eddf2fdf741664d47d9f00aa9d04b8" prot="public" virt="non-virtual"><scope>SCPI_Parser</scope><name>RegisterCommand</name></member>
      <member refid="class_s_c_p_i___parser_1acec496d6937a23f681dcea60f36f16c8" prot="public" virt="non-virtual"><scope>SCPI_Parser</scope><name>SetCommandTreeBase</name></member>
      <member refid="class_s_c_p_i___parser_1a58e60c01618cf653628495580b77b460" prot="public" virt="non-virtual"><scope>SCPI_Parser</scope><name>SetCommandTreeBase</name></member>
      <member refid="class_s_c_p_i___parser_1a5a055bdf0075d8848b6133194924faa0" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>tokens_</name></member>
      <member refid="class_s_c_p_i___parser_1a26fa50abbfcad4a5df6bf46833ea62a1" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>tokens_size_</name></member>
      <member refid="class_s_c_p_i___parser_1af7d35ab7afd81bce9cb6ee1b3a604d2f" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>tree_code_</name></member>
      <member refid="class_s_c_p_i___parser_1a1b784f3d0ae5aa1078d8be8895f135be" prot="protected" virt="non-virtual"><scope>SCPI_Parser</scope><name>valid_codes_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
